"use strict";

var drake = new BioLogica.Organism(BioLogica.Species.Drake, "a:m,b:M,a:h,b:h,a:C,b:C,a:a,b:a,a:B,b:B,a:D,b:D,a:w,b:W,a:Fl,b:Fl,a:Hl,b:hl,a:T,b:t,a:rh,b:rh,a:Bog,b:Bog", 1),
    sexOfDrake = 1,
    sexOfDrakeLabel = 'female';

function render() {
  // change sex buttons
  ReactDOM.render(React.createElement(GeniBlocks.ChangeSexButtons, {
    sex: sexOfDrakeLabel,
    species: "Drake",
    showLabel: true,
    onChange: function onChange(evt, iSex) {
      sexOfDrakeLabel = iSex;
      sexOfDrake = iSex === 'male' ? 0 : 1;
      drake = new BioLogica.Organism(BioLogica.Species.Drake, drake.getAlleleString(), sexOfDrake);
      render();
    }
  }), document.getElementById('change-sex-buttons'));

  // genome
  ReactDOM.render(React.createElement(GeniBlocks.GenomeView, {
    org: drake,
    hiddenAlleles: ['t', 'tk', 'h', 'c', 'a', 'b', 'd', 'bog', 'rh'],
    style: { marginTop: 50, top: 50 },
    alleleChanged: function alleleChanged(chrom, side, prevAllele, newAllele) {
      drake.genetics.genotype.chromosomes[chrom][side].alleles.replaceFirst(prevAllele, newAllele);
      drake = new BioLogica.Organism(BioLogica.Species.Drake, drake.getAlleleString(), sexOfDrake);
      render();
    }
  }), document.getElementById('drake-genome'));

  // drake
  ReactDOM.render(React.createElement(GeniBlocks.OrganismGlowView, { org: drake, color: '#FFFFAA', size: 200 }), document.getElementById('drake-image'));
}

document.getElementById("advance-button").onclick = function () {
  window.location.assign(window.location.href.replace("playground.html", "challenges.html?challenge=0"));
};

render();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhc2UtMS9wbGF5Z3JvdW5kLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxRQUFRLElBQUksVUFBVSxRQUFWLENBQW1CLFVBQVUsT0FBVixDQUFrQixLQUFsQixFQUF5QiwyR0FBaEQsRUFBNkosQ0FBN0osQ0FBUjtJQUNBLGFBQWEsQ0FBYjtJQUNBLGtCQUFrQixRQUFsQjs7QUFFTixTQUFTLE1BQVQsR0FBa0I7O0FBRWhCLFdBQVMsTUFBVCxDQUNFLE1BQU0sYUFBTixDQUFvQixXQUFXLGdCQUFYLEVBQTZCO0FBQzNDLFNBQUssZUFBTDtBQUNBLGFBQVMsT0FBVDtBQUNBLGVBQVcsSUFBWDtBQUNBLGNBQVUsa0JBQVMsR0FBVCxFQUFjLElBQWQsRUFBb0I7QUFDNUIsd0JBQWtCLElBQWxCLENBRDRCO0FBRTVCLG1CQUFhLFNBQVMsTUFBVCxHQUFrQixDQUFsQixHQUFzQixDQUF0QixDQUZlO0FBRzVCLGNBQVEsSUFBSSxVQUFVLFFBQVYsQ0FBbUIsVUFBVSxPQUFWLENBQWtCLEtBQWxCLEVBQXlCLE1BQU0sZUFBTixFQUFoRCxFQUF5RSxVQUF6RSxDQUFSLENBSDRCO0FBSTVCLGVBSjRCO0tBQXBCO0dBSmhCLENBREYsRUFZRSxTQUFTLGNBQVQsQ0FBd0Isb0JBQXhCLENBWkY7OztBQUZnQixVQWtCaEIsQ0FBUyxNQUFULENBQ0UsTUFBTSxhQUFOLENBQW9CLFdBQVcsVUFBWCxFQUF1QjtBQUN6QyxTQUFLLEtBQUw7QUFDQSxtQkFBZSxDQUFDLEdBQUQsRUFBSyxJQUFMLEVBQVUsR0FBVixFQUFjLEdBQWQsRUFBa0IsR0FBbEIsRUFBc0IsR0FBdEIsRUFBMEIsR0FBMUIsRUFBOEIsS0FBOUIsRUFBb0MsSUFBcEMsQ0FBZjtBQUNBLFdBQU8sRUFBQyxXQUFXLEVBQVgsRUFBZSxLQUFLLEVBQUwsRUFBdkI7QUFDQSxtQkFBZSx1QkFBUyxLQUFULEVBQWdCLElBQWhCLEVBQXNCLFVBQXRCLEVBQWtDLFNBQWxDLEVBQTZDO0FBQzFELFlBQU0sUUFBTixDQUFlLFFBQWYsQ0FBd0IsV0FBeEIsQ0FBb0MsS0FBcEMsRUFBMkMsSUFBM0MsRUFBaUQsT0FBakQsQ0FBeUQsWUFBekQsQ0FBc0UsVUFBdEUsRUFBa0YsU0FBbEYsRUFEMEQ7QUFFMUQsY0FBUSxJQUFJLFVBQVUsUUFBVixDQUFtQixVQUFVLE9BQVYsQ0FBa0IsS0FBbEIsRUFBeUIsTUFBTSxlQUFOLEVBQWhELEVBQXlFLFVBQXpFLENBQVIsQ0FGMEQ7QUFHMUQsZUFIMEQ7S0FBN0M7R0FKakIsQ0FERixFQVdFLFNBQVMsY0FBVCxDQUF3QixjQUF4QixDQVhGOzs7QUFsQmdCLFVBaUNoQixDQUFTLE1BQVQsQ0FDRSxNQUFNLGFBQU4sQ0FBb0IsV0FBVyxnQkFBWCxFQUE2QixFQUFDLEtBQUssS0FBTCxFQUFZLE9BQU8sU0FBUCxFQUFrQixNQUFNLEdBQU4sRUFBaEYsQ0FERixFQUVFLFNBQVMsY0FBVCxDQUF3QixhQUF4QixDQUZGLEVBakNnQjtDQUFsQjs7QUFzQ0EsU0FBUyxjQUFULENBQXdCLGdCQUF4QixFQUEwQyxPQUExQyxHQUFvRCxZQUFXO0FBQzdELFNBQU8sUUFBUCxDQUFnQixNQUFoQixDQUF1QixPQUFPLFFBQVAsQ0FBZ0IsSUFBaEIsQ0FBcUIsT0FBckIsQ0FBNkIsaUJBQTdCLEVBQWdELDZCQUFoRCxDQUF2QixFQUQ2RDtDQUFYOztBQUlwRCIsImZpbGUiOiJjYXNlLTEvcGxheWdyb3VuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCAgIGRyYWtlID0gbmV3IEJpb0xvZ2ljYS5PcmdhbmlzbShCaW9Mb2dpY2EuU3BlY2llcy5EcmFrZSwgXCJhOm0sYjpNLGE6aCxiOmgsYTpDLGI6QyxhOmEsYjphLGE6QixiOkIsYTpELGI6RCxhOncsYjpXLGE6RmwsYjpGbCxhOkhsLGI6aGwsYTpULGI6dCxhOnJoLGI6cmgsYTpCb2csYjpCb2dcIiwgMSksXG4gICAgICBzZXhPZkRyYWtlID0gMSxcbiAgICAgIHNleE9mRHJha2VMYWJlbCA9ICdmZW1hbGUnO1xuXG5mdW5jdGlvbiByZW5kZXIoKSB7XG4gIC8vIGNoYW5nZSBzZXggYnV0dG9uc1xuICBSZWFjdERPTS5yZW5kZXIoXG4gICAgUmVhY3QuY3JlYXRlRWxlbWVudChHZW5pQmxvY2tzLkNoYW5nZVNleEJ1dHRvbnMsIHtcbiAgICAgICAgICBzZXg6IHNleE9mRHJha2VMYWJlbCxcbiAgICAgICAgICBzcGVjaWVzOiBcIkRyYWtlXCIsXG4gICAgICAgICAgc2hvd0xhYmVsOiB0cnVlLFxuICAgICAgICAgIG9uQ2hhbmdlOiBmdW5jdGlvbihldnQsIGlTZXgpIHtcbiAgICAgICAgICAgIHNleE9mRHJha2VMYWJlbCA9IGlTZXg7XG4gICAgICAgICAgICBzZXhPZkRyYWtlID0gaVNleCA9PT0gJ21hbGUnID8gMCA6IDE7XG4gICAgICAgICAgICBkcmFrZSA9IG5ldyBCaW9Mb2dpY2EuT3JnYW5pc20oQmlvTG9naWNhLlNwZWNpZXMuRHJha2UsIGRyYWtlLmdldEFsbGVsZVN0cmluZygpLCBzZXhPZkRyYWtlKTtcbiAgICAgICAgICAgIHJlbmRlcigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSksXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NoYW5nZS1zZXgtYnV0dG9ucycpXG4gICk7XG5cbiAgLy8gZ2Vub21lXG4gIFJlYWN0RE9NLnJlbmRlcihcbiAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEdlbmlCbG9ja3MuR2Vub21lVmlldywge1xuICAgICAgb3JnOiBkcmFrZSxcbiAgICAgIGhpZGRlbkFsbGVsZXM6IFsndCcsJ3RrJywnaCcsJ2MnLCdhJywnYicsJ2QnLCdib2cnLCdyaCddLFxuICAgICAgc3R5bGU6IHttYXJnaW5Ub3A6IDUwLCB0b3A6IDUwfSxcbiAgICAgIGFsbGVsZUNoYW5nZWQ6IGZ1bmN0aW9uKGNocm9tLCBzaWRlLCBwcmV2QWxsZWxlLCBuZXdBbGxlbGUpIHtcbiAgICAgICAgZHJha2UuZ2VuZXRpY3MuZ2Vub3R5cGUuY2hyb21vc29tZXNbY2hyb21dW3NpZGVdLmFsbGVsZXMucmVwbGFjZUZpcnN0KHByZXZBbGxlbGUsIG5ld0FsbGVsZSk7XG4gICAgICAgIGRyYWtlID0gbmV3IEJpb0xvZ2ljYS5PcmdhbmlzbShCaW9Mb2dpY2EuU3BlY2llcy5EcmFrZSwgZHJha2UuZ2V0QWxsZWxlU3RyaW5nKCksIHNleE9mRHJha2UpO1xuICAgICAgICByZW5kZXIoKTtcbiAgICAgIH1cbiAgICB9KSxcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZHJha2UtZ2Vub21lJylcbiAgKTtcblxuICAvLyBkcmFrZVxuICBSZWFjdERPTS5yZW5kZXIoXG4gICAgUmVhY3QuY3JlYXRlRWxlbWVudChHZW5pQmxvY2tzLk9yZ2FuaXNtR2xvd1ZpZXcsIHtvcmc6IGRyYWtlLCBjb2xvcjogJyNGRkZGQUEnLCBzaXplOiAyMDB9KSxcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZHJha2UtaW1hZ2UnKSk7XG59XG5cbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWR2YW5jZS1idXR0b25cIikub25jbGljayA9IGZ1bmN0aW9uKCkge1xuICB3aW5kb3cubG9jYXRpb24uYXNzaWduKHdpbmRvdy5sb2NhdGlvbi5ocmVmLnJlcGxhY2UoXCJwbGF5Z3JvdW5kLmh0bWxcIiwgXCJjaGFsbGVuZ2VzLmh0bWw/Y2hhbGxlbmdlPTBcIikpO1xufTtcblxucmVuZGVyKCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
